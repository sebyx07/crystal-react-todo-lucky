#!/usr/bin/env bash
set -euo pipefail

# Lint and format Crystal + JavaScript/TypeScript code
# By default, automatically formats code
# Use --check to only check without modifying files
#
# Usage:
#   bin/lint              # Format all code (autocorrect)
#   bin/lint --check      # Check formatting without modifying files

CHECK_ONLY=false

# Parse arguments
for arg in "$@"; do
  case $arg in
    --check)
      CHECK_ONLY=true
      shift
      ;;
  esac
done

CRYSTAL_EXIT=0
JS_EXIT=0
TS_EXIT=0

echo "üîç Running Crystal formatter..."

if [ "$CHECK_ONLY" = true ]; then
  echo "   Mode: Check only (no modifications)"
  docker compose run --rm lucky crystal tool format --check src spec
  CRYSTAL_EXIT=$?

  if [ $CRYSTAL_EXIT -eq 0 ]; then
    echo "‚úÖ Crystal files are properly formatted"
  else
    echo "‚ùå Some Crystal files need formatting"
  fi
else
  echo "   Mode: Auto-format (will modify files)"
  docker compose run --rm lucky crystal tool format src spec
  echo "‚úÖ Crystal files formatted successfully"
fi

echo ""
echo "üîç Running ESLint for JavaScript/TypeScript..."

if [ "$CHECK_ONLY" = true ]; then
  bun run lint
  JS_EXIT=$?

  if [ $JS_EXIT -eq 0 ]; then
    echo "‚úÖ JS/TS files pass linting"
  else
    echo "‚ùå JS/TS files have linting issues. Run 'bin/lint' or 'bun run lint:fix' to fix."
  fi
else
  bun run lint:fix
  JS_EXIT=$?
  if [ $JS_EXIT -eq 0 ]; then
    echo "‚úÖ JS/TS files linted and fixed"
  else
    echo "‚ö†Ô∏è  Some JS/TS issues couldn't be auto-fixed"
  fi
fi

echo ""
echo "üîç Running TypeScript type checker..."

bun tsc --noEmit
TS_EXIT=$?

if [ $TS_EXIT -eq 0 ]; then
  echo "‚úÖ TypeScript types are valid"
else
  echo "‚ùå TypeScript type errors found"
fi

# Exit with error if any failed
if [ $CRYSTAL_EXIT -ne 0 ] || [ $JS_EXIT -ne 0 ] || [ $TS_EXIT -ne 0 ]; then
  exit 1
fi
