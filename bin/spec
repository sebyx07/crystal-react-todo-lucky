#!/usr/bin/env bash
set -euo pipefail

# Run all tests (Crystal + JavaScript/TypeScript)
# Usage: bin/spec [options]
# Examples:
#   bin/spec                    # Run all tests (Crystal + JS)
#   bin/spec --crystal          # Run only Crystal specs
#   bin/spec --js               # Run only JS/TS tests
#   bin/spec spec/requests/     # Run specific Crystal spec directory

CRYSTAL_EXIT=0
JS_EXIT=0
RUN_CRYSTAL=true
RUN_JS=true

# Parse arguments
if [ "${1:-}" = "--crystal" ]; then
  RUN_JS=false
  shift
elif [ "${1:-}" = "--js" ]; then
  RUN_CRYSTAL=false
  shift
fi

# Run JavaScript/TypeScript tests
if [ "$RUN_JS" = true ]; then
  echo "üß™ Running JavaScript/TypeScript tests..."
  echo ""
  bun run test
  JS_EXIT=$?
  echo ""
fi

# Run Crystal specs
if [ "$RUN_CRYSTAL" = true ]; then
  echo "üß™ Running Crystal specs..."
  echo ""

  # Ensure postgres is running
  docker compose up -d postgres > /dev/null 2>&1

  # Wait for postgres to be ready
  echo "Waiting for PostgreSQL to be ready..."
  until docker compose exec -T postgres pg_isready -U lucky > /dev/null 2>&1; do
    sleep 1
  done

  # Create test database if it doesn't exist
  docker compose exec -T postgres psql -U lucky -d postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'crystal_todo_list_test'" | grep -q 1 || \
    docker compose exec -T postgres psql -U lucky -d postgres -c "CREATE DATABASE crystal_todo_list_test;" > /dev/null 2>&1

  # Install dependencies if needed
  if [ ! -d "lib" ] || [ ! "$(ls -A lib)" ]; then
    echo "Installing shards..."
    docker compose run --rm lucky shards install
  fi

  # Run specs
  SPEC_TARGET="${1:-spec}"

  docker compose run --rm \
    -e DATABASE_URL="postgres://lucky:password@postgres:5432/crystal_todo_list_test" \
    -e LUCKY_ENV=test \
    lucky \
    crystal spec "$SPEC_TARGET"

  CRYSTAL_EXIT=$?
fi

# Exit with error if either failed
if [ $CRYSTAL_EXIT -ne 0 ] || [ $JS_EXIT -ne 0 ]; then
  echo ""
  echo "‚ùå Some tests failed"
  exit 1
fi

echo ""
echo "‚úÖ All tests passed!"
